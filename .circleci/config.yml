# NOTE: This yaml file will need a refactor. Right now we just need a CI/CD
# integration to ensure that we are running DB tests at every change. This
# pipeline will not do a release, or rql test right now. The later will be
# done after the drivers are extracted from the main repo.

version: 2.1
commands:
  install_dependencies:
    description: Install system requirements
    parameters:
      additional_packages:
        type: string
        default: ''
      pre_hook:
        type: string
        default: ''
    steps:
      - run: |
          << parameters.pre_hook >>
          apt install -y git-core build-essential protobuf-compiler python \
          libprotobuf-dev libboost-all-dev python nodejs npm \
          libncurses5-dev libjemalloc-dev wget m4 clang libssl1.0-dev \
          debhelper curl python3.7 python3.7-dev python3.7-distutils << parameters.additional_packages >>
  configure:
    description: Configure project
    parameters:
      fetch:
        type: string
        default: '--allow-fetch'
    steps:
      - run: ./configure << parameters.fetch >> CXX=clang++
  prepare:
    description: 'Checkout, configure and unstash build'
    parameters:
      fetch:
        type: string
        default: '--allow-fetch'
      additional_packages:
        type: string
        default: ''
    steps:
      - install_dependencies:
          pre_hook: apt update -qqy
          additional_packages: << parameters.additional_packages >>
      - checkout
      - restore_cache:
          key: 'rethinkdb-{{ .Revision }}'
      - configure:
          fetch: << parameters.fetch >>
  test:
    description: Run RethinkDB test
    parameters:
      command:
        type: string
        default: test/run -H
      pattern:
        type: string
    steps:
      - run: git clone https://github.com/rethinkdb/rethinkdb-python.git /tmp/rethinkdb-python
      - run: |
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python3.7 get-pip.py
          pip install -r /tmp/rethinkdb-python/requirements.txt
      - run:
          environment: PYTHON_DRIVER="/tmp/rethinkdb-python/rethinkdb"
          command: |
            << parameters.command >> << parameters.pattern >>

jobs:
  build:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - install_dependencies:
          pre_hook: apt update -qqy
      - checkout
      - configure
      - run: make -j7 support
      - run: make -j7 DEBUG=1
      - run: 'cp build/debug_clang/rethinkdb{,-unittest} build/'
      - store_artifacts:
          path: build/rethinkdb
          destination: rethinkdb
      - store_artifacts:
          path: build/rethinkdb-unittest
          destination: rethinkdb-unittest
      - save_cache:
          key: 'rethinkdb-{{ .Revision }}'
          paths:
            - ./build/
            - ./config.mk
  check_style:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - prepare
      - run: bash scripts/check_style.sh
  unit_test:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - prepare
      - test:
          pattern: unit
      - store_artifacts:
          path: test/results/
          destination: unit_tests
  integration_test:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - prepare
      - test:
          pattern: all '!unit' '!cpplint'
      - store_artifacts:
          path: test/results/
          destination: integration_tests
  rql_python:
    docker:
      - image: 'ubuntu:bionic'
    steps:
      - prepare
      - test:
          command: test/rql_test/test-runner -i py3.7
          pattern: polyglot

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: 0 0 * * *
          filters:
            branches:
              only:
                - next
                - v2.4.x
                - v2.5.x
    jobs:
      - check_style
      - build:
          requires:
            - check_style
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - rql_python:
          requires:
            - build
  pull_request_pipeline:
    jobs:
      - check_style
      - build:
          requires:
            - check_style
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - rql_python:
          requires:
            - build

